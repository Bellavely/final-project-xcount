{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(Logo, {}), _jsx(Header, {\n      children: \"\\u05D1\\u05E8\\u05D5\\u05DA \\u05D4\\u05D1\\u05D0!\"\n    }), _jsx(TextInput, {\n      label: \"\\u05DE\\u05D9\\u05D9\\u05DC\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D4\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"\\u05D4\\u05E8\\u05E9\\u05DD\"\n        })\n      }), _jsx(Text, {\n        children: \"\\u05E2\\u05D3\\u05D9\\u05D9\\u05DF \\u05D0\\u05D9\\u05DF \\u05DC\\u05DA \\u05DE\\u05E9\\u05EA\\u05DE\\u05E9?  \"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["C:/Users/shira/Desktop/Final-Project/Xcount/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","theme","emailValidator","passwordValidator","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","reset","index","routes","name","text","styles","row","push","link","StyleSheet","create","forgotPassword","width","alignItems","marginBottom","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n  \r\n\r\n  const onLoginPressed = () => {\r\n     const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    //  if (emailError || passwordError) {\r\n    //   setEmail({ ...email, error: emailError })\r\n    //   setPassword({ ...password, error: passwordError })\r\n    //    return\r\n    //  }\r\n    navigation.reset({\r\n      index: 0,\r\n      routes: [{ name: 'Dashboard' }],\r\n    })\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <Background>\r\n      <Logo />\r\n      <Header>ברוך הבא!</Header>\r\n      <TextInput\r\n        label=\"מייל\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"סיסמה\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n   \r\n      <Button mode=\"contained\" onPress={onLoginPressed }>\r\n        התחבר\r\n      </Button>\r\n      <View style={styles.row}>\r\n      <TouchableOpacity onPress={() => navigation.push('RegisterScreen')}>\r\n          <Text style={styles.link}>הרשם</Text>\r\n        </TouchableOpacity>\r\n        <Text>עדיין אין לך משתמש?  </Text>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}